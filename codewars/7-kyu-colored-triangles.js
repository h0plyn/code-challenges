// If you finish this kata, you can try Insane Coloured Triangles by Bubbler, which is a much harder version of this one.
// A coloured triangle is created from a row of colours, each of which is red, green or blue. Successive rows, each 
// containing one fewer colour than the last, are generated by considering the two touching colours in the previous row. If these
// colours are identical, the same colour is used in the new row. If they are differe
// missing colour is used in the new row. This is continued until the final row, with only a single colour, is generated.
// The different possibilities are:

// Colour here:        G G        B G        R G        B R
// Becomes colour:      G          R          B          G

function triangle(row) {
    let rowArr = row.split('');
    let tempColor = [];


    if (row.length === 1) return row;

    do {
        for (let i = 0; i < rowArr.length - 1; i++) {

            let currentColor = rowArr[i];
            let nextColor = rowArr[i+1];

            if (currentColor === nextColor) {
                tempColor.push(currentColor);
            }

            if (currentColor === 'B' && nextColor === 'G' || currentColor === 'G' && nextColor === 'B') {
                tempColor.push('R');
            }

            if (currentColor === 'R' && nextColor === 'G' || currentColor === 'G' && nextColor === 'R') {
                tempColor.push('B');
            }

            if (currentColor === 'B' && nextColor === 'R' || currentColor === 'R' && nextColor === 'B') {
                tempColor.push('G');
            }
        }
        rowArr = tempColor;
        tempColor = [];
    } while (rowArr.length > 1)
 
        
    return rowArr.join('');
}
